swagger: '2.0'
info:
  description: Esto es un ejemplo de la práctica de ASW sobre la API de Hacker News.
  version: 1.0.0
  title: Swagger Hacker News
host: 'practicaasw-hackernews.herokuapp.com'
basePath: /api/v1
schemes:
  - http
  - https
produces:
  - application/json
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: Authorization
    description: És la clau d'usuari generada per l'aplicació de Google.
paths:
  /users:
    get:
      tags:
        - users
      summary: Gets all users
      description: We get all the users in Hacker News
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/UserObject'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
            
  /users/{id}:
    get:
      tags:
        - users
      summary: Gets user with ID
      description: We get the user with this id.
      parameters:
        - name: id
          in: path
          type: number
          required: true
          description: Identificador de l'usuari
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/UserObject'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
            
  /users/{id}/update:
    put:
      security:
        - ApiKeyAuth: []
      summary: Updates about user with id
      description: Update del about de l'usuari amb identificador ID
      tags:
        - users
      parameters:
        - name: id
          in: path
          type: number
          required: true
          description: Identificador de l'usuari
        - name: UserBody
          in: body
          schema:
            $ref: '#/definitions/UserBody'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/UserObject'
        403:
          description: Error in authenticity.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: User does not exist.
          schema:
            $ref: '#/definitions/Error'
        422:
          description: Cannot update other profiles.
          schema:
            $ref: '#/definitions/Error'
            
  # Submissions Operations
  
  /submissions:
    get:
      tags:
        - submissions
      summary: Gets all submissions
      description: We get all the submissions in Hacker News
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/SubmissionObject'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
            
    post:
      security:
        - ApiKeyAuth: []
      summary: Creates a new Submission
      description: We create a new submission in Hacker News
      tags:
        - submissions
      parameters:
        - name: SubmissionBody
          in: body
          schema:
            $ref: '#/definitions/SubmissionBody'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/SubmissionObject'
        403:
          description: Error in authenticity.
          schema:
            $ref: '#/definitions/Error'
        417:
          description: Error in parameters.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Submission not saved.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
  
  /submissions/url:
    get:
      tags:
        - submissions
      summary: Gets all submissions with url
      description: We get all the submissions with URL in Hacker News
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/SubmissionObject'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
            
  /submissions/ask:
    get:
      tags:
        - submissions
      summary: Gets all submissions with text
      description: We get all the submissions with tezt in Hacker News
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/SubmissionObject'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
            
  /submissions/{id}:
    get:
      tags:
        - submissions
      summary: Gets the submissions with identifier ID
      description: We get the submission with identifier ID in Hacker News
      parameters:
        - name: id
          in: path
          type: number
          required: true
          description: Identificador de la submission
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/SubmissionObject'
        404:
          description: Submission does not exist.
          schema:
              $ref: '#/definitions/Error'
            
  /submissions/{id}/vote:
    post:
      security:
        - ApiKeyAuth: []
      summary: Votes a submissions
      description: The user votes a submission in Hacker News
      tags:
        - submissions
      parameters:
        - name: id
          in: path
          type: number
          required: true
          description: Identificador de la submission
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/SubmissionVotes'
        403:
          description: Error in authenticity.
          schema:
              $ref: '#/definitions/Error'
        404:
          description: Submission does not exist.
          schema:
              $ref: '#/definitions/Error'
        422:
          description: User has voted previously.
          schema:
            $ref: '#/definitions/Error'
            
  /submissions/{id}/unvote:
    post:
      security:
        - ApiKeyAuth: []
      summary: Unvotes a submissions
      description: The user unvotes a submission in Hacker News
      tags:
        - submissions
      parameters:
        - name: id
          in: path
          type: number
          required: true
          description: Identificador de la submission
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/SubmissionVotes'
        403:
          description: Error in authenticity.
          schema:
              $ref: '#/definitions/Error'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
  
  # Comments Operations
  /submissions/{id}/comments:
    get:
      tags:
        - comments
      summary: Gets the comments in the submission ID
      description: We get the comments in the submission with identifier ID in Hacker News
      parameters:
        - name: id
          in: path
          type: number
          required: true
          description: Identificador de la submission
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CommentObject'
        404:
          description: Submission does not exist.
          schema:
            $ref: '#/definitions/Error'
            
  /user/{id}/comments:
    get:
      tags:
        - comments
      summary: Gets the comments of the User ID
      description: We get the comments of the user with identifier ID in Hacker News
      parameters:
        - name: id
          in: path
          type: number
          required: true
          description: Identificador del User
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CommentObject'
        404:
          description: User does not exist
          schema:
            $ref: '#/definitions/Error'
        
            
  /comment/{id}:
    get:
      tags:
        - comments
      summary: Gets the comments with ID
      description: We get the comment with identifier ID in Hacker News
      parameters:
        - name: id
          in: path
          type: number
          required: true
          description: Identificador del comment
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CommentObject'
        404:
          description: Comment does not exist
          schema:
            $ref: '#/definitions/Error'
            
  /comments/{id}/vote:
    post:
      security:
        - ApiKeyAuth: []
      summary: Votes a comment
      description: The user votes a comment in Hacker News
      tags:
        - comments
      parameters:
        - name: id
          in: path
          type: number
          required: true
          description: Identificador del comentari
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CommentVotes'
        403:
          description: Error in authenticity.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Comment does not exist.
          schema:
            $ref: '#/definitions/Error'
        422:
          description: User has already voted this comment.
          schema:
            $ref: '#/definitions/Error'
            
  /comments/{id}/unvote:
    post:
      security:
        - ApiKeyAuth: []
      summary: Unvotes a comment
      description: The user unvotes a comment in Hacker News
      tags:
        - comments
      parameters:
        - name: id
          in: path
          type: number
          required: true
          description: Identificador del comentari
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CommentVotes'
        403:
          description: Error in authenticity.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Comment does not exist.
          schema:
            $ref: '#/definitions/Error'
        422:
          description: User cannot unvote this comment.
          schema:
            $ref: '#/definitions/Error'
            
  /comments/{id}/update:
    put:
      security:
        - ApiKeyAuth: []
      summary: Updates a comment
      description: The user updates a comment in Hacker News
      tags:
        - comments
      parameters:
        - name: id
          in: path
          type: number
          required: true
          description: Identificador del comentari
        - name: CommentUpdate
          description: Nova modifiació del comentari
          in: body
          schema:
            $ref: '#/definitions/CommentType'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CommentObject'
        403:
          description: Error in authenticity.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Comment does not exist.
          schema:
            $ref: '#/definitions/Error'
        422:
          description: Cannot update someones comment.
          schema:
            $ref: '#/definitions/Error'
            
  /submission/{id}/comment:
    post:
      security:
        - ApiKeyAuth: []
      summary: Creates a comment
      description: The user creates a comment in the submission in Hacker News
      tags:
        - comments
      parameters:
        - name: id
          in: path
          type: number
          required: true
          description: Identificador de la submission
        - name: Comment create
          description: Nou comentari a introduir
          in: body
          schema:
            $ref: '#/definitions/CommentType'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CommentObject'
        403:
          description: Error in authenticity.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Submission does not exist.
          schema:
            $ref: '#/definitions/Error'
        422:
          description: Other kind of error.
          schema:
            $ref: '#/definitions/Error'
            
  
  
definitions:

  # Users objects
  UserObject:
    type: object
    properties:
      status:
        type: string
      message:
        type: string
      data:
        $ref: '#/definitions/User'
        
  User:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      email:
        type: string
      about:
        type: string
      karma:
        type: integer
      created_at:
        type: string
      updated_at:
        type: string
        
  UserBody:
    type: object
    properties:
      about:
        type: string
        
        
  # Submissions Objects
  SubmissionObject:
    type: object
    properties:
      status:
        type: string
      message:
        type: string
      data:
        $ref: '#/definitions/Submission'
        
  SubmissionVotes:
    type: object
    properties:
      status:
        type: string
      message:
        type: string
      data:
        $ref: '#/definitions/VotesInSubmission'
        
  VotesInSubmission:
    type: object
    properties:
      Actual Votes:
        type: number
        
  Submission:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      url:
        type: string
      text:
        type: string
      user_id:
        type: integer
      created_at:
        type: string
      updated_at:
        type: string
        
  SubmissionBody:
    type: object
    properties:
      title:
        type: string
      url:
        type: string
      text:
        type: string
        
  # Comments Objects
  CommentObject:
    type: object
    properties:
      status:
        type: string
      message:
        type: string
      data:
        $ref: '#/definitions/Comment'
  
  Comment:
    type: object
    properties:
      id:
        type: integer
      content:
        type: string
      submission_id:
        type: integer
      user_id:
        type: integer
      created_at:
        type: string
      updated_at:
        type: string
        
  CommentVotes:
    type: object
    properties:
      status:
        type: string
      message:
        type: string
      data:
        $ref: '#/definitions/VotesInComment'
        
  VotesInComment:
    type: object
    properties:
      Actual Votes:
        type: number
        
  CommentType:
    type: object
    properties:
      content:
        type: string
  
  # Error object
  Error:
    type: object
    properties:
      status:
        type: string
      message:
        type: string
      data:
        $ref: '#/definitions/ErrorArray'
        
        
  ErrorArray:
    type: object
    